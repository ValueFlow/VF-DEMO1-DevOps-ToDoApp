{"version":3,"sources":["components/navbar/Navbar.js","configs/FirebaseConfig.js","configs/Firebase.js","actions/TodoActions.js","components/todo/TodoCategory.js","Helpers/Utils.js","components/todo/TodoList.js","components/todo/Todos.js","components/todo/TodoCreate.js","components/todo/TodoCounter.js","App.js","serviceWorker.js","reducers/Reducres.js","reducers/TodoReducers.js","index.js"],"names":["Navbar","className","href","src","width","height","alt","Component","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","databaseRef","ref","todosRef","child","categoriesRef","todoListAction","filter","dispatch","a","on","snapshot","todos","forEach","childSnapshot","item","val","key","push","categoryKey","t","todoCategory","isCompleted","type","payload","todoCategoriesAction","categories","addTodoAction","newToDo","set","deleteTodo","remove","completeTodo","update","TodoCategory","refreshTodoList","props","this","cats","length","groupedTodos","reduce","rv","x","map","category","onClick","description","style","fontSize","fontWeight","float","connect","state","fetchCategories","fetchToDos","bindActionCreators","Todo","complete","completeCurrentTodo","deleteCurrentTodo","todo","find","c","scope","Todos","data","Array","from","console","log","TodoList","TodoCreate","inputChange","evt","setState","target","name","value","addTodos","event","preventDefault","todoDescription","userId","id","placeholder","onChange","TodoCounter","completed","completedCount","notCompletedCount","counterStyle","margin","textStyle","marginLeft","class","App","Boolean","window","location","hostname","match","combineReducers","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff6d162e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar navbar-light bg-dark\">\r\n        <a className =\"navbar-brand\" href=\"#\">\r\n          <img\r\n            src=\"/docs/4.3/assets/brand/bootstrap-solid.svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"\"\r\n          />\r\n          Menu\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyBFPOwK5BEWVJexeHPkipuGE64VnPBiPJw\",\r\n  authDomain: \"reacttodo-a80ce.firebaseapp.com\",\r\n  databaseURL: \"https://reacttodo-a80ce.firebaseio.com\",\r\n  projectId: \"reacttodo-a80ce\",\r\n  storageBucket: \"reacttodo-a80ce.appspot.com\",\r\n  messagingSenderId: \"346964367327\",\r\n  appId: \"1:346964367327:web:740b167d25b629b56c566a\",\r\n  measurementId: \"G-XZ7W3ELCBH\"\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase'\r\nimport firebaseConfig from './FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst databaseRef = firebase.database().ref();\r\nexport const todosRef = databaseRef.child(\"todos\")\r\n\r\nexport const categoriesRef = databaseRef.child(\"categories\")\r\n","import { todosRef, categoriesRef } from '../configs/Firebase';\r\n\r\n/*\r\n  Todo list action\r\n*/\r\nexport const todoListAction = (filter=null) => async dispatch => {\r\n  todosRef.on(\"value\", snapshot => {\r\n    var todos = [];\r\n\r\n    snapshot.forEach((childSnapshot) => {\r\n      var item = childSnapshot.val();\r\n      item.key = childSnapshot.key;\r\n      todos.push(item);\r\n    });\r\n\r\n    if(filter){\r\n      // Filter by category\r\n      if(filter.categoryKey){\r\n        todos = todos.filter((t) => t.todoCategory === filter.categoryKey);\r\n      }\r\n\r\n      // filter by completed\r\n      if(filter.isCompleted===true){\r\n        todos = todos.filter((t) => t.isCompleted === true);\r\n      }\r\n\r\n      // filter by not completed\r\n      if(filter.isCompleted===false){\r\n        todos = todos.filter((t) => t.isCompleted === false);\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: 'TODO_LIST',\r\n      payload: todos\r\n    });\r\n  });\r\n};\r\n\r\n/*\r\n  Todo Category action\r\n*/\r\nexport const todoCategoriesAction = () => async dispatch => {\r\n  categoriesRef.on(\"value\", snapshot => {\r\n    \r\n    var categories = [];\r\n\r\n    snapshot.forEach((childSnapshot) => {\r\n      var item = childSnapshot.val();\r\n      item.key = childSnapshot.key;\r\n      categories.push(item);\r\n    });\r\n    \r\n    dispatch({\r\n      type: 'TODO_CATEGORIES',\r\n      payload: categories\r\n    });\r\n  });\r\n}\r\n\r\n/*\r\n  Add new Todo\r\n*/\r\nexport const addTodoAction = (newToDo) => async dispatch => {\r\n  todosRef.push().set(newToDo);\r\n}\r\n\r\n/*\r\n  Delete Todo\r\n*/\r\nexport const deleteTodo = (key) => async dispatch =>  {\r\n  todosRef.child(key).remove();\r\n}\r\n\r\n/*\r\n  Complete Todo\r\n*/\r\nexport const completeTodo = (key, isCompleted) => async dispatch =>  {\r\n  todosRef.child(key).update({isCompleted: !isCompleted})\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { todoListAction } from '../../actions/TodoActions';\r\nimport { bindActionCreators } from 'redux'\r\nimport { groupBy } from \"../../Helpers/Utils\";\r\n\r\nexport class TodoCategory extends Component {\r\n\r\n  refreshTodoList = (categoryKey) => {\r\n    // Filter todos list by current selected category\r\n    this.props.todoListAction({ categoryKey: categoryKey, isCompleted: null });\r\n  }\r\n\r\n  render() {\r\n    var categories = this.props.categories || [];\r\n    var { todos } = this.props || [];\r\n\r\n    let cats = [];\r\n\r\n    if (categories && categories.length > 0 && (todos && todos.length >= 0)) {\r\n      const groupedTodos = groupBy(todos, 'todoCategory') || [];\r\n\r\n      if (categories && categories.length > 0) {\r\n        cats = categories.map((category) =>\r\n          <div className='list-group-item list-group-item-warning'>\r\n            <span className=\"float-right\" >\r\n              <span className=\"badge badge-info badge-pill\">{groupedTodos[category.key] ? groupedTodos[category.key].length : 0}</span>\r\n            </span>\r\n\r\n            <span key={category.key} >\r\n              <a href=\"#\" onClick={() => this.refreshTodoList(category.key)}>{category.description}</a>\r\n            </span>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className='card cateogry'>\r\n        <div className='card-header float-left'>\r\n          <span style={{ fontSize: '1.25rem', fontWeight: '500' }} >Categories</span>\r\n          {/* All categories = Refresh all todos */}\r\n          <a href=\"#\" onClick={() => this.refreshTodoList(null)}><span style={{ float: 'right' }}><i className=\"fa fa-bolt\" ></i></span></a>\r\n        </div>\r\n        <div className='card-body'>\r\n          <ul className='list-group'>\r\n            {cats}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ todoListAction: todoListAction }, dispatch);\r\n}\r\n\r\n\r\n// Maps state (store data) to component Prop so data is accessible\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.fetchCategories,\r\n    todos: state.fetchToDos\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(TodoCategory);\r\n\r\n","/*\r\n    Group by an Object Array by a field of the object\r\n*/\r\nexport const groupBy = function (array, key) {\r\n    return array.reduce(function (rv, x) {\r\n        (rv[x[key]] = rv[x[key]] || []).push(x);\r\n        return rv;\r\n    }, {});\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {deleteTodo, completeTodo} from '../../actions/TodoActions';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport class Todo extends Component {\r\n\r\n  completeTodo = (key, complete) => {\r\n    this.props.completeCurrentTodo(key, complete);\r\n  }\r\n\r\n  deleteTodo = (key) => {\r\n    this.props.deleteCurrentTodo(key);\r\n  }\r\n\r\n  render() {\r\n\r\n    const {categories} = this.props;\r\n\r\n    var todos = this.props.todos.map(todo => (\r\n      <tr key={todo.key}>\r\n        <td>{todo.description}</td>\r\n        <td>{categories.find(c=> c.key === todo.todoCategory).description}</td>\r\n        <td>\r\n          {todo.isCompleted ? (\r\n            <i className='far fa-check-circle'></i>\r\n          ) : (\r\n            <i className='fas fa-times'></i>\r\n          )}\r\n        </td>\r\n        <td>\r\n          <a href=\"#\" onClick={()=> this.deleteTodo(todo.key)}><i className='far fa-trash-alt'></i> </a> |{\" \"}\r\n          <a href=\"#\" onClick={()=>this.completeTodo(todo.key, todo.isCompleted)}>\r\n            {todo.isCompleted ? (\r\n            <i className='fas fa-toggle-on'></i>\r\n          ) : (\r\n            <i className='fas fa-toggle-off'></i>\r\n          )}\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <table className='table table-hover'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>Description</th>\r\n              <th scope='col'>Category</th>\r\n              <th scope='col'>Completed</th>\r\n              <th scope='col'>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{todos}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// 1) Will map the Actions to Props e.g. fetch todos to be added to this.props\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteCurrentTodo: bindActionCreators(deleteTodo, dispatch),\r\n    completeCurrentTodo : bindActionCreators(completeTodo, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.fetchCategories\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Todo)\r\n","import React, { Component } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport {todoListAction} from '../../actions/TodoActions';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nclass Todos extends Component {\r\n\r\n  componentDidMount() {\r\n    // Call the todoListAction so todos are loaded in form load\r\n    this.props.todoListAction();\r\n  }\r\n  \r\n  render() {\r\n    // NB: Somehow this was needed to get the proper array even though type of this.props.todos was array. \r\n    // Otherwise this error was showing up -> this.props.data.map is not a function\r\n    const data = Array.from(this.props.todos) || [];\r\n\r\n    console.log(\"data\", data);\r\n\r\n    if(data){\r\n      return (\r\n        <div>\r\n          <TodoList todos={data} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// 1) Will map the Actions to Props e.g. fetch todos to be added to this.props\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({todoListAction}, dispatch);\r\n}\r\n\r\n// 2) Maps the reducer data to props \r\n// i.e the action has already dispatched and populated the reducer data\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos : state.fetchToDos\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Todos);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport { todoCategoriesAction, addTodoAction } from '../../actions/TodoActions';\r\n\r\nclass TodoCreate extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      todoDescription: '',\r\n      todoCategory: ''\r\n    }\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.props.todoCategoriesAction();\r\n  }\r\n\r\n  // Bind control to state\r\n  inputChange = (evt) => {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  }\r\n\r\n  addTodos = (event) => {\r\n    event.preventDefault();\r\n    var {addTodoAction} = this.props;\r\n\r\n    var newTodo = {\r\n      description: this.state.todoDescription, \r\n      todoCategory: this.state.todoCategory, \r\n      isCompleted: false, \r\n      userId: ''\r\n    };\r\n\r\n    addTodoAction(newTodo);\r\n\r\n    this.setState({todoDescription: ''});\r\n    this.setState({todoCategory: '-1'});\r\n  }\r\n\r\n  \r\n  render() {\r\n    var categories = this.props.categories || [];\r\n\r\n    let cats = [];\r\n    if (categories && categories.length > 0) {\r\n      cats = categories.map((category) =>\r\n      <option key={category.key} value={category.key}>{category.description}</option>\r\n      );\r\n    }\r\n\r\n    return (\r\n\r\n      <div className=\"card left-a\">\r\n        <div className=\"card-header\">\r\n          <h5>Create Todo</h5>\r\n        </div>\r\n        <div className=\"pad-right-50 pad-top-20 card-body left-a\">\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-form-label col-lg-2\">Description:</label>\r\n              <div className=\"col-lg-10\">\r\n                <input \r\n                      type=\"text\" \r\n                      className=\"form-control\" \r\n                      id=\"todoDescription\" \r\n                      name=\"todoDescription\"\r\n                      placeholder=\"Enter description of what to be done?\"\r\n                      value={this.state.todoDescription}\r\n                      onChange={this.inputChange}\r\n                      >\r\n                </input>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-form-label col-lg-2\">Category:</label>\r\n              <div className=\"col-lg-10\">\r\n\r\n                <select name=\"todoCategory\" className=\"col-lg-4\"  onChange={this.inputChange} >\r\n                  <option value=\"-1\">Select A Category</option>\r\n                  {cats}\r\n                </select>\r\n                \r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-10\">\r\n                <button type=\"submit\" onClick={this.addTodos} className=\"btn btn-primary\">Save Todo</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// 1) Will map the Actions to Props e.g. fetch todos to be added to this.props\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    todoCategoriesAction: bindActionCreators(todoCategoriesAction, dispatch),\r\n    addTodoAction: bindActionCreators(addTodoAction, dispatch)\r\n  }\r\n}\r\n\r\n// 2) Maps the reducer data to props \r\n// i.e the action has already dispatched and populated the reducer data\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.fetchCategories\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (TodoCreate)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { todoListAction } from '../../actions/TodoActions';\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass TodoCounter extends Component {\r\n\r\n    refreshTodoList = (completed) => {\r\n        this.props.todoListAction({ categoryKey: null, isCompleted: completed });\r\n    }\r\n\r\n    render() {\r\n        const { todos } = this.props;\r\n\r\n        var completedCount = 0;\r\n        var notCompletedCount = 0;\r\n\r\n        if (todos && todos.length > 0) {\r\n            completedCount = todos.filter((t) => t.isCompleted === true).length;\r\n            notCompletedCount = todos.filter((t) => t.isCompleted === false).length;\r\n        }\r\n\r\n        const counterStyle = {\r\n            width: '100%',\r\n            margin: 1\r\n        };\r\n\r\n        const textStyle = {\r\n            float: 'left',\r\n            marginLeft: 5\r\n        }\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div class=\"list-group\">\r\n                    <a href=\"#\" class=\"list-group-item list-group-item-action list-group-item-success\">\r\n                        <button type=\"button\" style={counterStyle} className=\"btn btn-success\" onClick={() => this.refreshTodoList(true)}>\r\n                            <span className=\"badge badge-light float-left badge-pill\">{completedCount}</span>\r\n                            <span style={textStyle}>Completed</span>\r\n                        </button>\r\n                    </a>\r\n                    <a href=\"#\" class=\"list-group-item list-group-item-action list-group-item-warning\">\r\n                        <button style={counterStyle} type=\"button\" className=\"btn btn-warning\" onClick={() => this.refreshTodoList(false)}>\r\n                            <span className=\"badge badge-light float-left badge-pill\">{notCompletedCount}</span>\r\n                            <span style={textStyle}>Not Completed</span>\r\n                        </button>\r\n                    </a>\r\n                    <a href=\"#\" class=\"list-group-item list-group-item-action list-group-item-info\">\r\n                        <button style={counterStyle} type=\"button\" className=\"btn btn-info\" onClick={() => this.refreshTodoList(null)}>\r\n                            <span className=\"badge badge-light float-left badge-pill\">{completedCount + notCompletedCount}</span>\r\n                            <span style={textStyle}>All</span>\r\n                        </button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ todoListAction: todoListAction }, dispatch);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.fetchToDos\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(TodoCounter)\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport TodoCategory from \"./components/todo/TodoCategory\";\nimport Todos from \"./components/todo/Todos\";\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\nimport TodoCreate from './components/todo/TodoCreate';\nimport TodoCounter from \"./components/todo/TodoCounter\";\n\nfunction App() {\n  return (\n    <div className=''>\n\n      <div>\n        <Navbar />\n      </div>\n\n      <div className=\"container-fluid top-10\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <TodoCategory />\n\n            <br></br>\n            \n            <TodoCounter />\n\n          </div>\n\n          <div className=\"col-lg-10\">\n\n            <div className=\"padding-right-30\">\n              <TodoCreate />\n            </div>\n\n            <br></br>\n\n            <div>\n              <Todos />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport {fetchToDos, fetchCategories} from './TodoReducers.js';\r\n\r\nexport default combineReducers({\r\n    fetchToDos,\r\n    fetchCategories\r\n});","\r\nexport const fetchToDos = (state = {}, action = {}) => {\r\n  switch (action.type) {\r\n    case \"TODO_LIST\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const  fetchCategories = (state = {}, action = {}) => {\r\n  switch (action.type) {\r\n    case \"TODO_CATEGORIES\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reducers from './reducers/Reducres';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n                    <Provider store={store}>\n                        <App />\n                    </Provider>,\n                    document.getElementById('root')\n                );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}